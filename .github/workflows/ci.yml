name: Continuous Integration

on:
  pull_request:
    branches: [master]
    paths-ignore:
      - "**/*.md"
permissions:
  contents: read

jobs:
  build-sdks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"
      - name: Clean up
        run: make clean
      - name: Install mingw-w64
        run: sudo apt-get update && sudo apt-get install -y mingw-w64
      - name: Install windows target
        run: rustup target add x86_64-pc-windows-gnu
      - name: Install uniffi-go-bindgen
        run: cargo install uniffi-bindgen-go --git https://github.com/NordSecurity/uniffi-bindgen-go --tag v0.3.0+v0.28.3
      - name: Install php
        run: sudo apt-get install -y php composer
      - name: build go sdk
        run: make build-go-sdk
      - name: build python sdk
        run: make build-python-sdk
      - name: build node sdk
        run: make build-node-sdk
      - name: build wasm sdk
        run: make build-wasm-sdk
      - name: build php sdk
        run: make build-php-sdk

  run-cargo-tests:
    needs: build-sdks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install protoc
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Setup protoc
        uses: arduino/setup-protoc@v3.0.0
      - name: Run cargo tests
        run: cargo test

  run-node-tests:
    needs: build-sdks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Run node tests
        run: make build-node-sdk && cd sdks/node && npm ci && npm test
  run-wasm-tests:
    needs: build-sdks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: "latest"
      - name: Setup Playwright
        uses: ./.github/actions/setup-playwright

      - name: Run wasm tests
        run: |
          make build-wasm-sdk
          cd sdks/web/test && \
          npm i && \
          npm test

  run-cli-tests:
    needs: build-sdks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Install protoc
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Setup protoc
        uses: arduino/setup-protoc@v3.0.0
      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      - name: Add Go cli to PATH
        run: |
          echo 'export PATH=$PATH:$(go env GOPATH)/cli' >> $GITHUB_PATH
      - name: Run cli tests
        run: cd cli && make test

  run-go-tests:
    needs: build-sdks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: run go tests
        run: cd sdks/go && go test -v ./...

  run-go-tests-win:
    needs: build-sdks
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
      - name: Install GCC
        run: choco install mingw
      - name: run go tests
        run: cd sdks/go && go test -v ./...

  run-python-tests:
    needs: build-sdks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Run python tests
        run: cd sdks/python && python -m unittest tests/test_payment_plan.py

  run-python-tests-win:
    needs: build-sdks
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Run python tests
        run: cd sdks/python && python -m unittest tests/test_payment_plan.py

  run-php-tests:
    needs: build-sdks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: mbstring, xml, curl, json, bcmath
      - name: Install Composer
        run: composer install --no-interaction --prefer-dist
      - name: Run PHP tests
        run: |
          cd sdks/php
          composer install --no-interaction --prefer-dist
          vendor/bin/phpunit --configuration phpunit.xml

  run-php-tests-win:
    needs: build-sdks
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.1"
          extensions: mbstring, xml, curl, json, bcmath
      - name: Install Composer
        run: composer install --no-interaction --prefer-dist
      - name: Run PHP tests
        run: |
          cd sdks/php
          composer install --no-interaction --prefer-dist
          vendor/bin/phpunit --configuration phpunit.xml
