// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: protos/plan.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlanParams struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	RequestedAmount                float64                `protobuf:"fixed64,1,opt,name=requested_amount,json=requestedAmount,proto3" json:"requested_amount,omitempty"`
	FirstPaymentDateMillis         int64                  `protobuf:"varint,2,opt,name=first_payment_date_millis,json=firstPaymentDateMillis,proto3" json:"first_payment_date_millis,omitempty"`
	DisbursementDateMillis         int64                  `protobuf:"varint,3,opt,name=disbursement_date_millis,json=disbursementDateMillis,proto3" json:"disbursement_date_millis,omitempty"`
	Installments                   uint32                 `protobuf:"varint,4,opt,name=installments,proto3" json:"installments,omitempty"`
	DebitServicePercentage         uint32                 `protobuf:"varint,5,opt,name=debit_service_percentage,json=debitServicePercentage,proto3" json:"debit_service_percentage,omitempty"`
	Mdr                            float64                `protobuf:"fixed64,6,opt,name=mdr,proto3" json:"mdr,omitempty"`
	TacPercentage                  float64                `protobuf:"fixed64,7,opt,name=tac_percentage,json=tacPercentage,proto3" json:"tac_percentage,omitempty"`
	IofOverall                     float64                `protobuf:"fixed64,8,opt,name=iof_overall,json=iofOverall,proto3" json:"iof_overall,omitempty"`
	IofPercentage                  float64                `protobuf:"fixed64,9,opt,name=iof_percentage,json=iofPercentage,proto3" json:"iof_percentage,omitempty"`
	InterestRate                   float64                `protobuf:"fixed64,10,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	MinInstallmentAmount           float64                `protobuf:"fixed64,11,opt,name=min_installment_amount,json=minInstallmentAmount,proto3" json:"min_installment_amount,omitempty"`
	MaxTotalAmount                 float64                `protobuf:"fixed64,12,opt,name=max_total_amount,json=maxTotalAmount,proto3" json:"max_total_amount,omitempty"`
	DisbursementOnlyOnBusinessDays bool                   `protobuf:"varint,13,opt,name=disbursement_only_on_business_days,json=disbursementOnlyOnBusinessDays,proto3" json:"disbursement_only_on_business_days,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *PlanParams) Reset() {
	*x = PlanParams{}
	mi := &file_protos_plan_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanParams) ProtoMessage() {}

func (x *PlanParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_plan_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanParams.ProtoReflect.Descriptor instead.
func (*PlanParams) Descriptor() ([]byte, []int) {
	return file_protos_plan_proto_rawDescGZIP(), []int{0}
}

func (x *PlanParams) GetRequestedAmount() float64 {
	if x != nil {
		return x.RequestedAmount
	}
	return 0
}

func (x *PlanParams) GetFirstPaymentDateMillis() int64 {
	if x != nil {
		return x.FirstPaymentDateMillis
	}
	return 0
}

func (x *PlanParams) GetDisbursementDateMillis() int64 {
	if x != nil {
		return x.DisbursementDateMillis
	}
	return 0
}

func (x *PlanParams) GetInstallments() uint32 {
	if x != nil {
		return x.Installments
	}
	return 0
}

func (x *PlanParams) GetDebitServicePercentage() uint32 {
	if x != nil {
		return x.DebitServicePercentage
	}
	return 0
}

func (x *PlanParams) GetMdr() float64 {
	if x != nil {
		return x.Mdr
	}
	return 0
}

func (x *PlanParams) GetTacPercentage() float64 {
	if x != nil {
		return x.TacPercentage
	}
	return 0
}

func (x *PlanParams) GetIofOverall() float64 {
	if x != nil {
		return x.IofOverall
	}
	return 0
}

func (x *PlanParams) GetIofPercentage() float64 {
	if x != nil {
		return x.IofPercentage
	}
	return 0
}

func (x *PlanParams) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

func (x *PlanParams) GetMinInstallmentAmount() float64 {
	if x != nil {
		return x.MinInstallmentAmount
	}
	return 0
}

func (x *PlanParams) GetMaxTotalAmount() float64 {
	if x != nil {
		return x.MaxTotalAmount
	}
	return 0
}

func (x *PlanParams) GetDisbursementOnlyOnBusinessDays() bool {
	if x != nil {
		return x.DisbursementOnlyOnBusinessDays
	}
	return false
}

type PlanResponse struct {
	state                                    protoimpl.MessageState `protogen:"open.v1"`
	Installment                              uint32                 `protobuf:"varint,1,opt,name=installment,proto3" json:"installment,omitempty"`
	DueDateMillis                            int64                  `protobuf:"varint,2,opt,name=due_date_millis,json=dueDateMillis,proto3" json:"due_date_millis,omitempty"`
	AccumulatedDays                          int64                  `protobuf:"varint,3,opt,name=accumulated_days,json=accumulatedDays,proto3" json:"accumulated_days,omitempty"`
	DaysIndex                                float64                `protobuf:"fixed64,4,opt,name=days_index,json=daysIndex,proto3" json:"days_index,omitempty"`
	AccumulatedDaysIndex                     float64                `protobuf:"fixed64,5,opt,name=accumulated_days_index,json=accumulatedDaysIndex,proto3" json:"accumulated_days_index,omitempty"`
	InterestRate                             float64                `protobuf:"fixed64,6,opt,name=interest_rate,json=interestRate,proto3" json:"interest_rate,omitempty"`
	InstallmentAmount                        float64                `protobuf:"fixed64,7,opt,name=installment_amount,json=installmentAmount,proto3" json:"installment_amount,omitempty"`
	InstallmentAmountWithoutTac              float64                `protobuf:"fixed64,8,opt,name=installment_amount_without_tac,json=installmentAmountWithoutTac,proto3" json:"installment_amount_without_tac,omitempty"`
	TotalAmount                              float64                `protobuf:"fixed64,9,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	DebitService                             float64                `protobuf:"fixed64,10,opt,name=debit_service,json=debitService,proto3" json:"debit_service,omitempty"`
	CustomerDebitServiceAmount               float64                `protobuf:"fixed64,11,opt,name=customer_debit_service_amount,json=customerDebitServiceAmount,proto3" json:"customer_debit_service_amount,omitempty"`
	CustomerAmount                           float64                `protobuf:"fixed64,12,opt,name=customer_amount,json=customerAmount,proto3" json:"customer_amount,omitempty"`
	CalculationBasisForEffectiveInterestRate float64                `protobuf:"fixed64,13,opt,name=calculation_basis_for_effective_interest_rate,json=calculationBasisForEffectiveInterestRate,proto3" json:"calculation_basis_for_effective_interest_rate,omitempty"`
	MerchantDebitServiceAmount               float64                `protobuf:"fixed64,14,opt,name=merchant_debit_service_amount,json=merchantDebitServiceAmount,proto3" json:"merchant_debit_service_amount,omitempty"`
	MerchantTotalAmount                      float64                `protobuf:"fixed64,15,opt,name=merchant_total_amount,json=merchantTotalAmount,proto3" json:"merchant_total_amount,omitempty"`
	SettledToMerchant                        float64                `protobuf:"fixed64,16,opt,name=settled_to_merchant,json=settledToMerchant,proto3" json:"settled_to_merchant,omitempty"`
	MdrAmount                                float64                `protobuf:"fixed64,17,opt,name=mdr_amount,json=mdrAmount,proto3" json:"mdr_amount,omitempty"`
	EffectiveInterestRate                    float64                `protobuf:"fixed64,18,opt,name=effective_interest_rate,json=effectiveInterestRate,proto3" json:"effective_interest_rate,omitempty"`
	TotalEffectiveCost                       float64                `protobuf:"fixed64,19,opt,name=total_effective_cost,json=totalEffectiveCost,proto3" json:"total_effective_cost,omitempty"`
	EirYearly                                float64                `protobuf:"fixed64,20,opt,name=eir_yearly,json=eirYearly,proto3" json:"eir_yearly,omitempty"`
	TecYearly                                float64                `protobuf:"fixed64,21,opt,name=tec_yearly,json=tecYearly,proto3" json:"tec_yearly,omitempty"`
	EirMonthly                               float64                `protobuf:"fixed64,22,opt,name=eir_monthly,json=eirMonthly,proto3" json:"eir_monthly,omitempty"`
	TecMonthly                               float64                `protobuf:"fixed64,23,opt,name=tec_monthly,json=tecMonthly,proto3" json:"tec_monthly,omitempty"`
	TotalIof                                 float64                `protobuf:"fixed64,24,opt,name=total_iof,json=totalIof,proto3" json:"total_iof,omitempty"`
	ContractAmount                           float64                `protobuf:"fixed64,25,opt,name=contract_amount,json=contractAmount,proto3" json:"contract_amount,omitempty"`
	ContractAmountWithoutTac                 float64                `protobuf:"fixed64,26,opt,name=contract_amount_without_tac,json=contractAmountWithoutTac,proto3" json:"contract_amount_without_tac,omitempty"`
	TacAmount                                float64                `protobuf:"fixed64,27,opt,name=tac_amount,json=tacAmount,proto3" json:"tac_amount,omitempty"`
	IofPercentage                            float64                `protobuf:"fixed64,28,opt,name=iof_percentage,json=iofPercentage,proto3" json:"iof_percentage,omitempty"`
	OverallIof                               float64                `protobuf:"fixed64,29,opt,name=overall_iof,json=overallIof,proto3" json:"overall_iof,omitempty"`
	DisbursementDateMillis                   int64                  `protobuf:"varint,30,opt,name=disbursement_date_millis,json=disbursementDateMillis,proto3" json:"disbursement_date_millis,omitempty"`
	PreDisbursementAmount                    float64                `protobuf:"fixed64,33,opt,name=pre_disbursement_amount,json=preDisbursementAmount,proto3" json:"pre_disbursement_amount,omitempty"`
	PaidTotalIof                             float64                `protobuf:"fixed64,34,opt,name=paid_total_iof,json=paidTotalIof,proto3" json:"paid_total_iof,omitempty"`
	PaidContractAmount                       float64                `protobuf:"fixed64,35,opt,name=paid_contract_amount,json=paidContractAmount,proto3" json:"paid_contract_amount,omitempty"`
	Invoices                                 *Invoices              `protobuf:"bytes,36,opt,name=invoices,proto3" json:"invoices,omitempty"`
	unknownFields                            protoimpl.UnknownFields
	sizeCache                                protoimpl.SizeCache
}

func (x *PlanResponse) Reset() {
	*x = PlanResponse{}
	mi := &file_protos_plan_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanResponse) ProtoMessage() {}

func (x *PlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_plan_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanResponse.ProtoReflect.Descriptor instead.
func (*PlanResponse) Descriptor() ([]byte, []int) {
	return file_protos_plan_proto_rawDescGZIP(), []int{1}
}

func (x *PlanResponse) GetInstallment() uint32 {
	if x != nil {
		return x.Installment
	}
	return 0
}

func (x *PlanResponse) GetDueDateMillis() int64 {
	if x != nil {
		return x.DueDateMillis
	}
	return 0
}

func (x *PlanResponse) GetAccumulatedDays() int64 {
	if x != nil {
		return x.AccumulatedDays
	}
	return 0
}

func (x *PlanResponse) GetDaysIndex() float64 {
	if x != nil {
		return x.DaysIndex
	}
	return 0
}

func (x *PlanResponse) GetAccumulatedDaysIndex() float64 {
	if x != nil {
		return x.AccumulatedDaysIndex
	}
	return 0
}

func (x *PlanResponse) GetInterestRate() float64 {
	if x != nil {
		return x.InterestRate
	}
	return 0
}

func (x *PlanResponse) GetInstallmentAmount() float64 {
	if x != nil {
		return x.InstallmentAmount
	}
	return 0
}

func (x *PlanResponse) GetInstallmentAmountWithoutTac() float64 {
	if x != nil {
		return x.InstallmentAmountWithoutTac
	}
	return 0
}

func (x *PlanResponse) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PlanResponse) GetDebitService() float64 {
	if x != nil {
		return x.DebitService
	}
	return 0
}

func (x *PlanResponse) GetCustomerDebitServiceAmount() float64 {
	if x != nil {
		return x.CustomerDebitServiceAmount
	}
	return 0
}

func (x *PlanResponse) GetCustomerAmount() float64 {
	if x != nil {
		return x.CustomerAmount
	}
	return 0
}

func (x *PlanResponse) GetCalculationBasisForEffectiveInterestRate() float64 {
	if x != nil {
		return x.CalculationBasisForEffectiveInterestRate
	}
	return 0
}

func (x *PlanResponse) GetMerchantDebitServiceAmount() float64 {
	if x != nil {
		return x.MerchantDebitServiceAmount
	}
	return 0
}

func (x *PlanResponse) GetMerchantTotalAmount() float64 {
	if x != nil {
		return x.MerchantTotalAmount
	}
	return 0
}

func (x *PlanResponse) GetSettledToMerchant() float64 {
	if x != nil {
		return x.SettledToMerchant
	}
	return 0
}

func (x *PlanResponse) GetMdrAmount() float64 {
	if x != nil {
		return x.MdrAmount
	}
	return 0
}

func (x *PlanResponse) GetEffectiveInterestRate() float64 {
	if x != nil {
		return x.EffectiveInterestRate
	}
	return 0
}

func (x *PlanResponse) GetTotalEffectiveCost() float64 {
	if x != nil {
		return x.TotalEffectiveCost
	}
	return 0
}

func (x *PlanResponse) GetEirYearly() float64 {
	if x != nil {
		return x.EirYearly
	}
	return 0
}

func (x *PlanResponse) GetTecYearly() float64 {
	if x != nil {
		return x.TecYearly
	}
	return 0
}

func (x *PlanResponse) GetEirMonthly() float64 {
	if x != nil {
		return x.EirMonthly
	}
	return 0
}

func (x *PlanResponse) GetTecMonthly() float64 {
	if x != nil {
		return x.TecMonthly
	}
	return 0
}

func (x *PlanResponse) GetTotalIof() float64 {
	if x != nil {
		return x.TotalIof
	}
	return 0
}

func (x *PlanResponse) GetContractAmount() float64 {
	if x != nil {
		return x.ContractAmount
	}
	return 0
}

func (x *PlanResponse) GetContractAmountWithoutTac() float64 {
	if x != nil {
		return x.ContractAmountWithoutTac
	}
	return 0
}

func (x *PlanResponse) GetTacAmount() float64 {
	if x != nil {
		return x.TacAmount
	}
	return 0
}

func (x *PlanResponse) GetIofPercentage() float64 {
	if x != nil {
		return x.IofPercentage
	}
	return 0
}

func (x *PlanResponse) GetOverallIof() float64 {
	if x != nil {
		return x.OverallIof
	}
	return 0
}

func (x *PlanResponse) GetDisbursementDateMillis() int64 {
	if x != nil {
		return x.DisbursementDateMillis
	}
	return 0
}

func (x *PlanResponse) GetPreDisbursementAmount() float64 {
	if x != nil {
		return x.PreDisbursementAmount
	}
	return 0
}

func (x *PlanResponse) GetPaidTotalIof() float64 {
	if x != nil {
		return x.PaidTotalIof
	}
	return 0
}

func (x *PlanResponse) GetPaidContractAmount() float64 {
	if x != nil {
		return x.PaidContractAmount
	}
	return 0
}

func (x *PlanResponse) GetInvoices() *Invoices {
	if x != nil {
		return x.Invoices
	}
	return nil
}

type PlanResponses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Responses     []*PlanResponse        `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanResponses) Reset() {
	*x = PlanResponses{}
	mi := &file_protos_plan_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanResponses) ProtoMessage() {}

func (x *PlanResponses) ProtoReflect() protoreflect.Message {
	mi := &file_protos_plan_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanResponses.ProtoReflect.Descriptor instead.
func (*PlanResponses) Descriptor() ([]byte, []int) {
	return file_protos_plan_proto_rawDescGZIP(), []int{2}
}

func (x *PlanResponses) GetResponses() []*PlanResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type DownPaymentParams struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Params                 *PlanParams            `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	RequestedAmount        float64                `protobuf:"fixed64,2,opt,name=requested_amount,json=requestedAmount,proto3" json:"requested_amount,omitempty"`
	MinInstallmentAmount   float64                `protobuf:"fixed64,3,opt,name=min_installment_amount,json=minInstallmentAmount,proto3" json:"min_installment_amount,omitempty"`
	FirstPaymentDateMillis int64                  `protobuf:"varint,4,opt,name=first_payment_date_millis,json=firstPaymentDateMillis,proto3" json:"first_payment_date_millis,omitempty"`
	Installments           uint32                 `protobuf:"varint,5,opt,name=installments,proto3" json:"installments,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DownPaymentParams) Reset() {
	*x = DownPaymentParams{}
	mi := &file_protos_plan_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownPaymentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownPaymentParams) ProtoMessage() {}

func (x *DownPaymentParams) ProtoReflect() protoreflect.Message {
	mi := &file_protos_plan_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownPaymentParams.ProtoReflect.Descriptor instead.
func (*DownPaymentParams) Descriptor() ([]byte, []int) {
	return file_protos_plan_proto_rawDescGZIP(), []int{3}
}

func (x *DownPaymentParams) GetParams() *PlanParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *DownPaymentParams) GetRequestedAmount() float64 {
	if x != nil {
		return x.RequestedAmount
	}
	return 0
}

func (x *DownPaymentParams) GetMinInstallmentAmount() float64 {
	if x != nil {
		return x.MinInstallmentAmount
	}
	return 0
}

func (x *DownPaymentParams) GetFirstPaymentDateMillis() int64 {
	if x != nil {
		return x.FirstPaymentDateMillis
	}
	return 0
}

func (x *DownPaymentParams) GetInstallments() uint32 {
	if x != nil {
		return x.Installments
	}
	return 0
}

type DownPaymentResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	InstallmentAmount      float64                `protobuf:"fixed64,1,opt,name=installment_amount,json=installmentAmount,proto3" json:"installment_amount,omitempty"`
	TotalAmount            float64                `protobuf:"fixed64,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	InstallmentQuantity    uint32                 `protobuf:"varint,3,opt,name=installment_quantity,json=installmentQuantity,proto3" json:"installment_quantity,omitempty"`
	FirstPaymentDateMillis int64                  `protobuf:"varint,4,opt,name=first_payment_date_millis,json=firstPaymentDateMillis,proto3" json:"first_payment_date_millis,omitempty"`
	Plans                  *PlanResponses         `protobuf:"bytes,5,opt,name=plans,proto3" json:"plans,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *DownPaymentResponse) Reset() {
	*x = DownPaymentResponse{}
	mi := &file_protos_plan_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownPaymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownPaymentResponse) ProtoMessage() {}

func (x *DownPaymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_plan_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownPaymentResponse.ProtoReflect.Descriptor instead.
func (*DownPaymentResponse) Descriptor() ([]byte, []int) {
	return file_protos_plan_proto_rawDescGZIP(), []int{4}
}

func (x *DownPaymentResponse) GetInstallmentAmount() float64 {
	if x != nil {
		return x.InstallmentAmount
	}
	return 0
}

func (x *DownPaymentResponse) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *DownPaymentResponse) GetInstallmentQuantity() uint32 {
	if x != nil {
		return x.InstallmentQuantity
	}
	return 0
}

func (x *DownPaymentResponse) GetFirstPaymentDateMillis() int64 {
	if x != nil {
		return x.FirstPaymentDateMillis
	}
	return 0
}

func (x *DownPaymentResponse) GetPlans() *PlanResponses {
	if x != nil {
		return x.Plans
	}
	return nil
}

type DownPaymentResponses struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Responses     []*DownPaymentResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownPaymentResponses) Reset() {
	*x = DownPaymentResponses{}
	mi := &file_protos_plan_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownPaymentResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownPaymentResponses) ProtoMessage() {}

func (x *DownPaymentResponses) ProtoReflect() protoreflect.Message {
	mi := &file_protos_plan_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownPaymentResponses.ProtoReflect.Descriptor instead.
func (*DownPaymentResponses) Descriptor() ([]byte, []int) {
	return file_protos_plan_proto_rawDescGZIP(), []int{5}
}

func (x *DownPaymentResponses) GetResponses() []*DownPaymentResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type Invoice struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AccumulatedDays   int64                  `protobuf:"varint,1,opt,name=accumulated_days,json=accumulatedDays,proto3" json:"accumulated_days,omitempty"`
	Factor            float64                `protobuf:"fixed64,2,opt,name=factor,proto3" json:"factor,omitempty"`
	AccumulatedFactor float64                `protobuf:"fixed64,3,opt,name=accumulated_factor,json=accumulatedFactor,proto3" json:"accumulated_factor,omitempty"`
	DueDateMillis     int64                  `protobuf:"varint,4,opt,name=due_date_millis,json=dueDateMillis,proto3" json:"due_date_millis,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Invoice) Reset() {
	*x = Invoice{}
	mi := &file_protos_plan_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoice) ProtoMessage() {}

func (x *Invoice) ProtoReflect() protoreflect.Message {
	mi := &file_protos_plan_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoice.ProtoReflect.Descriptor instead.
func (*Invoice) Descriptor() ([]byte, []int) {
	return file_protos_plan_proto_rawDescGZIP(), []int{6}
}

func (x *Invoice) GetAccumulatedDays() int64 {
	if x != nil {
		return x.AccumulatedDays
	}
	return 0
}

func (x *Invoice) GetFactor() float64 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *Invoice) GetAccumulatedFactor() float64 {
	if x != nil {
		return x.AccumulatedFactor
	}
	return 0
}

func (x *Invoice) GetDueDateMillis() int64 {
	if x != nil {
		return x.DueDateMillis
	}
	return 0
}

type Invoices struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Invoices      []*Invoice             `protobuf:"bytes,1,rep,name=invoices,proto3" json:"invoices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Invoices) Reset() {
	*x = Invoices{}
	mi := &file_protos_plan_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Invoices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Invoices) ProtoMessage() {}

func (x *Invoices) ProtoReflect() protoreflect.Message {
	mi := &file_protos_plan_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Invoices.ProtoReflect.Descriptor instead.
func (*Invoices) Descriptor() ([]byte, []int) {
	return file_protos_plan_proto_rawDescGZIP(), []int{7}
}

func (x *Invoices) GetInvoices() []*Invoice {
	if x != nil {
		return x.Invoices
	}
	return nil
}

var File_protos_plan_proto protoreflect.FileDescriptor

const file_protos_plan_proto_rawDesc = "" +
	"\n" +
	"\x11protos/plan.proto\x12\tcli.types\"\xdc\x04\n" +
	"\n" +
	"PlanParams\x12)\n" +
	"\x10requested_amount\x18\x01 \x01(\x01R\x0frequestedAmount\x129\n" +
	"\x19first_payment_date_millis\x18\x02 \x01(\x03R\x16firstPaymentDateMillis\x128\n" +
	"\x18disbursement_date_millis\x18\x03 \x01(\x03R\x16disbursementDateMillis\x12\"\n" +
	"\finstallments\x18\x04 \x01(\rR\finstallments\x128\n" +
	"\x18debit_service_percentage\x18\x05 \x01(\rR\x16debitServicePercentage\x12\x10\n" +
	"\x03mdr\x18\x06 \x01(\x01R\x03mdr\x12%\n" +
	"\x0etac_percentage\x18\a \x01(\x01R\rtacPercentage\x12\x1f\n" +
	"\viof_overall\x18\b \x01(\x01R\n" +
	"iofOverall\x12%\n" +
	"\x0eiof_percentage\x18\t \x01(\x01R\riofPercentage\x12#\n" +
	"\rinterest_rate\x18\n" +
	" \x01(\x01R\finterestRate\x124\n" +
	"\x16min_installment_amount\x18\v \x01(\x01R\x14minInstallmentAmount\x12(\n" +
	"\x10max_total_amount\x18\f \x01(\x01R\x0emaxTotalAmount\x12J\n" +
	"\"disbursement_only_on_business_days\x18\r \x01(\bR\x1edisbursementOnlyOnBusinessDays\"\x9d\f\n" +
	"\fPlanResponse\x12 \n" +
	"\vinstallment\x18\x01 \x01(\rR\vinstallment\x12&\n" +
	"\x0fdue_date_millis\x18\x02 \x01(\x03R\rdueDateMillis\x12)\n" +
	"\x10accumulated_days\x18\x03 \x01(\x03R\x0faccumulatedDays\x12\x1d\n" +
	"\n" +
	"days_index\x18\x04 \x01(\x01R\tdaysIndex\x124\n" +
	"\x16accumulated_days_index\x18\x05 \x01(\x01R\x14accumulatedDaysIndex\x12#\n" +
	"\rinterest_rate\x18\x06 \x01(\x01R\finterestRate\x12-\n" +
	"\x12installment_amount\x18\a \x01(\x01R\x11installmentAmount\x12C\n" +
	"\x1einstallment_amount_without_tac\x18\b \x01(\x01R\x1binstallmentAmountWithoutTac\x12!\n" +
	"\ftotal_amount\x18\t \x01(\x01R\vtotalAmount\x12#\n" +
	"\rdebit_service\x18\n" +
	" \x01(\x01R\fdebitService\x12A\n" +
	"\x1dcustomer_debit_service_amount\x18\v \x01(\x01R\x1acustomerDebitServiceAmount\x12'\n" +
	"\x0fcustomer_amount\x18\f \x01(\x01R\x0ecustomerAmount\x12_\n" +
	"-calculation_basis_for_effective_interest_rate\x18\r \x01(\x01R(calculationBasisForEffectiveInterestRate\x12A\n" +
	"\x1dmerchant_debit_service_amount\x18\x0e \x01(\x01R\x1amerchantDebitServiceAmount\x122\n" +
	"\x15merchant_total_amount\x18\x0f \x01(\x01R\x13merchantTotalAmount\x12.\n" +
	"\x13settled_to_merchant\x18\x10 \x01(\x01R\x11settledToMerchant\x12\x1d\n" +
	"\n" +
	"mdr_amount\x18\x11 \x01(\x01R\tmdrAmount\x126\n" +
	"\x17effective_interest_rate\x18\x12 \x01(\x01R\x15effectiveInterestRate\x120\n" +
	"\x14total_effective_cost\x18\x13 \x01(\x01R\x12totalEffectiveCost\x12\x1d\n" +
	"\n" +
	"eir_yearly\x18\x14 \x01(\x01R\teirYearly\x12\x1d\n" +
	"\n" +
	"tec_yearly\x18\x15 \x01(\x01R\ttecYearly\x12\x1f\n" +
	"\veir_monthly\x18\x16 \x01(\x01R\n" +
	"eirMonthly\x12\x1f\n" +
	"\vtec_monthly\x18\x17 \x01(\x01R\n" +
	"tecMonthly\x12\x1b\n" +
	"\ttotal_iof\x18\x18 \x01(\x01R\btotalIof\x12'\n" +
	"\x0fcontract_amount\x18\x19 \x01(\x01R\x0econtractAmount\x12=\n" +
	"\x1bcontract_amount_without_tac\x18\x1a \x01(\x01R\x18contractAmountWithoutTac\x12\x1d\n" +
	"\n" +
	"tac_amount\x18\x1b \x01(\x01R\ttacAmount\x12%\n" +
	"\x0eiof_percentage\x18\x1c \x01(\x01R\riofPercentage\x12\x1f\n" +
	"\voverall_iof\x18\x1d \x01(\x01R\n" +
	"overallIof\x128\n" +
	"\x18disbursement_date_millis\x18\x1e \x01(\x03R\x16disbursementDateMillis\x126\n" +
	"\x17pre_disbursement_amount\x18! \x01(\x01R\x15preDisbursementAmount\x12$\n" +
	"\x0epaid_total_iof\x18\" \x01(\x01R\fpaidTotalIof\x120\n" +
	"\x14paid_contract_amount\x18# \x01(\x01R\x12paidContractAmount\x12/\n" +
	"\binvoices\x18$ \x01(\v2\x13.cli.types.InvoicesR\binvoices\"F\n" +
	"\rPlanResponses\x125\n" +
	"\tresponses\x18\x01 \x03(\v2\x17.cli.types.PlanResponseR\tresponses\"\x82\x02\n" +
	"\x11DownPaymentParams\x12-\n" +
	"\x06params\x18\x01 \x01(\v2\x15.cli.types.PlanParamsR\x06params\x12)\n" +
	"\x10requested_amount\x18\x02 \x01(\x01R\x0frequestedAmount\x124\n" +
	"\x16min_installment_amount\x18\x03 \x01(\x01R\x14minInstallmentAmount\x129\n" +
	"\x19first_payment_date_millis\x18\x04 \x01(\x03R\x16firstPaymentDateMillis\x12\"\n" +
	"\finstallments\x18\x05 \x01(\rR\finstallments\"\x85\x02\n" +
	"\x13DownPaymentResponse\x12-\n" +
	"\x12installment_amount\x18\x01 \x01(\x01R\x11installmentAmount\x12!\n" +
	"\ftotal_amount\x18\x02 \x01(\x01R\vtotalAmount\x121\n" +
	"\x14installment_quantity\x18\x03 \x01(\rR\x13installmentQuantity\x129\n" +
	"\x19first_payment_date_millis\x18\x04 \x01(\x03R\x16firstPaymentDateMillis\x12.\n" +
	"\x05plans\x18\x05 \x01(\v2\x18.cli.types.PlanResponsesR\x05plans\"T\n" +
	"\x14DownPaymentResponses\x12<\n" +
	"\tresponses\x18\x01 \x03(\v2\x1e.cli.types.DownPaymentResponseR\tresponses\"\xa3\x01\n" +
	"\aInvoice\x12)\n" +
	"\x10accumulated_days\x18\x01 \x01(\x03R\x0faccumulatedDays\x12\x16\n" +
	"\x06factor\x18\x02 \x01(\x01R\x06factor\x12-\n" +
	"\x12accumulated_factor\x18\x03 \x01(\x01R\x11accumulatedFactor\x12&\n" +
	"\x0fdue_date_millis\x18\x04 \x01(\x03R\rdueDateMillis\":\n" +
	"\bInvoices\x12.\n" +
	"\binvoices\x18\x01 \x03(\v2\x12.cli.types.InvoiceR\binvoicesB\x16Z\x14playment_plan/protosb\x06proto3"

var (
	file_protos_plan_proto_rawDescOnce sync.Once
	file_protos_plan_proto_rawDescData []byte
)

func file_protos_plan_proto_rawDescGZIP() []byte {
	file_protos_plan_proto_rawDescOnce.Do(func() {
		file_protos_plan_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_plan_proto_rawDesc), len(file_protos_plan_proto_rawDesc)))
	})
	return file_protos_plan_proto_rawDescData
}

var file_protos_plan_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protos_plan_proto_goTypes = []any{
	(*PlanParams)(nil),           // 0: cli.types.PlanParams
	(*PlanResponse)(nil),         // 1: cli.types.PlanResponse
	(*PlanResponses)(nil),        // 2: cli.types.PlanResponses
	(*DownPaymentParams)(nil),    // 3: cli.types.DownPaymentParams
	(*DownPaymentResponse)(nil),  // 4: cli.types.DownPaymentResponse
	(*DownPaymentResponses)(nil), // 5: cli.types.DownPaymentResponses
	(*Invoice)(nil),              // 6: cli.types.Invoice
	(*Invoices)(nil),             // 7: cli.types.Invoices
}
var file_protos_plan_proto_depIdxs = []int32{
	7, // 0: cli.types.PlanResponse.invoices:type_name -> cli.types.Invoices
	1, // 1: cli.types.PlanResponses.responses:type_name -> cli.types.PlanResponse
	0, // 2: cli.types.DownPaymentParams.params:type_name -> cli.types.PlanParams
	2, // 3: cli.types.DownPaymentResponse.plans:type_name -> cli.types.PlanResponses
	4, // 4: cli.types.DownPaymentResponses.responses:type_name -> cli.types.DownPaymentResponse
	6, // 5: cli.types.Invoices.invoices:type_name -> cli.types.Invoice
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_protos_plan_proto_init() }
func file_protos_plan_proto_init() {
	if File_protos_plan_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_plan_proto_rawDesc), len(file_protos_plan_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_plan_proto_goTypes,
		DependencyIndexes: file_protos_plan_proto_depIdxs,
		MessageInfos:      file_protos_plan_proto_msgTypes,
	}.Build()
	File_protos_plan_proto = out.File
	file_protos_plan_proto_goTypes = nil
	file_protos_plan_proto_depIdxs = nil
}
